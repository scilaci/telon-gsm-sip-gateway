# .github/workflows/android.yml
name: Build Android

on:
  push:
    branches: ['**']
  workflow_dispatch:

jobs:
  android:
    runs-on: ubuntu-latest

    steps:
    # 1) Checkout
    - uses: actions/checkout@v4

    # 2) Node 16
    - uses: actions/setup-node@v4
      with:
        node-version: 16

    # 3) JDK 17 pour sdkmanager
    - uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17

    # 4) Installer le SDK Android
    - name: Install Android SDK
      uses: android-actions/setup-android@v3
      with:
        components: |
          platform-tools
          platforms;android-32
          build-tools;33.0.2
          ndk;17.2.4988734

    # 4b) Auto-accept des licences
    - name: Accept Android SDK licenses
      run: yes | sdkmanager --licenses

    # 4c) local.properties pour que Gradle trouve bien le NDK
    - name: Fix local.properties
      run: |
        mkdir -p telon-gateway-app/android
        cat <<EOF > telon-gateway-app/android/local.properties
        sdk.dir=$ANDROID_SDK_ROOT
        ndk.dir=$ANDROID_SDK_ROOT/ndk/17.2.4988734
        EOF

    # 5) JDK 8 pour Gradle 5.5
    - uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 8
        cache: gradle

    # 6) Cache npm
    - uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

    # 7) Install JS deps
    - name: Install JS deps
      run: npm install --legacy-peer-deps --no-audit --no-fund
      working-directory: telon-gateway-app

    # 7b) Patch des plugins natifs
    - name: Patch JavaVersion & release pour plugins natifs
      run: |
        for pkg in react-native-replace-dialer react-native-sip2; do
          find telon-gateway-app/node_modules/$pkg \
            -type f -name '*.gradle' \
            -exec sed -i -E \
              -e 's/JavaVersion\.VERSION_17/JavaVersion.toVersion(17)/g' \
              -e 's/compileOptions\s*\{[^}]*\}/compileOptions { sourceCompatibility = JavaVersion.VERSION_1_8 targetCompatibility = JavaVersion.VERSION_1_8 }/g' \
              {} +
        done

    # 8) Désactiver Jetifier (on est déjà en AndroidX)
    - name: Disable Jetifier
      run: |
        echo "android.useAndroidX=true"  >> telon-gateway-app/android/gradle.properties
        echo "android.enableJetifier=false" >> telon-gateway-app/android/gradle.properties

    # 9) Forcer Java 1.8 partout (fallback)
    - name: Force Java 1.8 everywhere
      run: |
        cat <<'EOF' >> telon-gateway-app/android/build.gradle

        // --- FORCE JAVA 1.8 POUR TOUS LES SOUS-PROJETS ---
        subprojects {
          tasks.withType(JavaCompile).configureEach {
            sourceCompatibility = '1.8'
            targetCompatibility = '1.8'
            // Si jamais une option release traînait
            if (options.release != null) {
              options.release = null
            }
          }
        }
        EOF

    # 10) Cache Gradle
    - uses: gradle/actions/setup-gradle@v3

    # 11) Build APK
    - name: Assemble release
      working-directory: telon-gateway-app/android
      run: |
        chmod +x gradlew
        ./gradlew -v
        ./gradlew clean assembleRelease --no-daemon

    # 12) Upload APK
    - uses: actions/upload-artifact@v4
      with:
        name: app-release.apk
        path: telon-gateway-app/android/app/build/outputs/apk/release/app-release.apk
